// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;

namespace PlanByProgram
{
    public class PlanByProgramOutputs: SystemResults
    {
		/// <summary>
		/// Quantity of rooms placed.
		/// </summary>
		[JsonProperty("Rooms Placed")]
		public double RoomsPlaced {get; set;}

		/// <summary>
		/// Total area of all placed rooms.
		/// </summary>
		[JsonProperty("Total Placed Room Area")]
		public double TotalPlacedRoomArea {get; set;}

		/// <summary>
		/// Total area of horizontal circulation.
		/// </summary>
		[JsonProperty("Total Circulation Area")]
		public double TotalCirculationArea {get; set;}

		/// <summary>
		/// Total area of rooms and circulation.
		/// </summary>
		[JsonProperty("Total Area")]
		public double TotalArea {get; set;}



        /// <summary>
        /// Construct a PlanByProgramOutputs with default inputs.
        /// This should be used for testing only.
        /// </summary>
        public PlanByProgramOutputs() : base()
        {

        }


        /// <summary>
        /// Construct a PlanByProgramOutputs specifying all inputs.
        /// </summary>
        /// <returns></returns>
        [JsonConstructor]
        public PlanByProgramOutputs(double roomsPlaced, double totalPlacedRoomArea, double totalCirculationArea, double totalArea): base()
        {
			this.RoomsPlaced = roomsPlaced;
			this.TotalPlacedRoomArea = totalPlacedRoomArea;
			this.TotalCirculationArea = totalCirculationArea;
			this.TotalArea = totalArea;

		}

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			return json;
		}
	}
}