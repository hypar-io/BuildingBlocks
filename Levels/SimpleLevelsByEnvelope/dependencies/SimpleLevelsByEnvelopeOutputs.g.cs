// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;

namespace SimpleLevelsByEnvelope
{
    public class SimpleLevelsByEnvelopeOutputs: SystemResults
    {
		/// <summary>
		/// Total number of levels.
		/// </summary>
		[JsonProperty("Level Quantity")]
		public double LevelQuantity {get; set;}

		/// <summary>
		/// Total aggregate area of all interior levels, excluding the roof.
		/// </summary>
		[JsonProperty("Total Level Area")]
		public double TotalLevelArea {get; set;}

		/// <summary>
		/// Total area of all levels below grade.
		/// </summary>
		[JsonProperty("Subgrade Level Area")]
		public double SubgradeLevelArea {get; set;}

		/// <summary>
		/// Total area of all levels above or at grade, excluding the roof.
		/// </summary>
		[JsonProperty("Above Grade Level Area")]
		public double AboveGradeLevelArea {get; set;}



        /// <summary>
        /// Construct a SimpleLevelsByEnvelopeOutputs with default inputs.
        /// This should be used for testing only.
        /// </summary>
        public SimpleLevelsByEnvelopeOutputs() : base()
        {

        }


        /// <summary>
        /// Construct a SimpleLevelsByEnvelopeOutputs specifying all inputs.
        /// </summary>
        /// <returns></returns>
        [JsonConstructor]
        public SimpleLevelsByEnvelopeOutputs(double levelQuantity, double totalLevelArea, double subgradeLevelArea, double aboveGradeLevelArea): base()
        {
			this.LevelQuantity = levelQuantity;
			this.TotalLevelArea = totalLevelArea;
			this.SubgradeLevelArea = subgradeLevelArea;
			this.AboveGradeLevelArea = aboveGradeLevelArea;

		}

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			return json;
		}
	}
}