//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.21.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Spatial;
using Elements.Validators;
using Elements.Serialization.JSON;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements
{
    #pragma warning disable // Disable all warnings

    /// <summary>A group of levels associated with a particular building or site. </summary>
    [JsonConverter(typeof(Elements.Serialization.JSON.JsonInheritanceConverter), "discriminator")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v13.0.0.0)")]
    public partial class LevelGroup : Element
    {
        [JsonConstructor]
        public LevelGroup(IList<Level> @levels, System.Guid? @site, string @levelGroupId, double? @maxHeight, System.Guid @id = default, string @name = null)
            : base(id, name)
        {
            this.Levels = @levels;
            this.Site = @site;
            this.LevelGroupId = @levelGroupId;
            this.MaxHeight = @maxHeight;
            }
        
        // Empty constructor
        public LevelGroup()
            : base()
        {
        }
    
        /// <summary>The levels for this group</summary>
        [JsonProperty("Levels", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<Level> Levels { get; set; }
    
        /// <summary>The site these levels are associated with, if any.</summary>
        [JsonProperty("Site", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Site { get; set; }
    
        /// <summary>A unique, consistent ID which should persist for the lifetime of this level group.</summary>
        [JsonProperty("Level Group Id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LevelGroupId { get; set; }
    
        /// <summary>The maximum allowed height for this level group</summary>
        [JsonProperty("Max Height", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MaxHeight { get; set; }
    
    
    }
}